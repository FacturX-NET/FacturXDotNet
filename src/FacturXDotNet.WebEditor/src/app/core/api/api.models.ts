//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v14.2.0.0 (NJsonSchema v11.1.0.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

/* tslint:disable */
/* eslint-disable */

// ReSharper disable InconsistentNaming

export class ApplicableHeaderTradeAgreement implements IApplicableHeaderTradeAgreement {
  buyerReference?: string | undefined;
  sellerTradeParty?: SellerTradeParty | undefined;
  buyerTradeParty?: BuyerTradeParty | undefined;
  buyerOrderReferencedDocument?: BuyerOrderReferencedDocument | undefined;

  [key: string]: any;

  constructor(data?: IApplicableHeaderTradeAgreement) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property)) (<any>this)[property] = (<any>data)[property];
      }
      this.sellerTradeParty = data.sellerTradeParty && !(<any>data.sellerTradeParty).toJSON ? new SellerTradeParty(data.sellerTradeParty) : <SellerTradeParty>this.sellerTradeParty;
      this.buyerTradeParty = data.buyerTradeParty && !(<any>data.buyerTradeParty).toJSON ? new BuyerTradeParty(data.buyerTradeParty) : <BuyerTradeParty>this.buyerTradeParty;
      this.buyerOrderReferencedDocument =
        data.buyerOrderReferencedDocument && !(<any>data.buyerOrderReferencedDocument).toJSON
          ? new BuyerOrderReferencedDocument(data.buyerOrderReferencedDocument)
          : <BuyerOrderReferencedDocument>this.buyerOrderReferencedDocument;
    }
  }

  init(_data?: any) {
    if (_data) {
      for (var property in _data) {
        if (_data.hasOwnProperty(property)) this[property] = _data[property];
      }
      this.buyerReference = _data['buyerReference'];
      this.sellerTradeParty = _data['sellerTradeParty'] ? SellerTradeParty.fromJS(_data['sellerTradeParty']) : <any>undefined;
      this.buyerTradeParty = _data['buyerTradeParty'] ? BuyerTradeParty.fromJS(_data['buyerTradeParty']) : <any>undefined;
      this.buyerOrderReferencedDocument = _data['buyerOrderReferencedDocument'] ? BuyerOrderReferencedDocument.fromJS(_data['buyerOrderReferencedDocument']) : <any>undefined;
    }
  }

  static fromJS(data: any): ApplicableHeaderTradeAgreement {
    data = typeof data === 'object' ? data : {};
    let result = new ApplicableHeaderTradeAgreement();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    for (var property in this) {
      if (this.hasOwnProperty(property)) data[property] = this[property];
    }
    data['buyerReference'] = this.buyerReference;
    data['sellerTradeParty'] = this.sellerTradeParty ? this.sellerTradeParty.toJSON() : <any>undefined;
    data['buyerTradeParty'] = this.buyerTradeParty ? this.buyerTradeParty.toJSON() : <any>undefined;
    data['buyerOrderReferencedDocument'] = this.buyerOrderReferencedDocument ? this.buyerOrderReferencedDocument.toJSON() : <any>undefined;
    return data;
  }
}

export interface IApplicableHeaderTradeAgreement {
  buyerReference?: string | undefined;
  sellerTradeParty?: ISellerTradeParty | undefined;
  buyerTradeParty?: IBuyerTradeParty | undefined;
  buyerOrderReferencedDocument?: IBuyerOrderReferencedDocument | undefined;

  [key: string]: any;
}

export class ApplicableHeaderTradeDelivery implements IApplicableHeaderTradeDelivery {
  [key: string]: any;

  constructor(data?: IApplicableHeaderTradeDelivery) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property)) (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      for (var property in _data) {
        if (_data.hasOwnProperty(property)) this[property] = _data[property];
      }
    }
  }

  static fromJS(data: any): ApplicableHeaderTradeDelivery {
    data = typeof data === 'object' ? data : {};
    let result = new ApplicableHeaderTradeDelivery();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    for (var property in this) {
      if (this.hasOwnProperty(property)) data[property] = this[property];
    }
    return data;
  }
}

export interface IApplicableHeaderTradeDelivery {
  [key: string]: any;
}

export class ApplicableHeaderTradeSettlement implements IApplicableHeaderTradeSettlement {
  invoiceCurrencyCode?: string | undefined;
  specifiedTradeSettlementHeaderMonetarySummation?: SpecifiedTradeSettlementHeaderMonetarySummation | undefined;

  [key: string]: any;

  constructor(data?: IApplicableHeaderTradeSettlement) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property)) (<any>this)[property] = (<any>data)[property];
      }
      this.specifiedTradeSettlementHeaderMonetarySummation =
        data.specifiedTradeSettlementHeaderMonetarySummation && !(<any>data.specifiedTradeSettlementHeaderMonetarySummation).toJSON
          ? new SpecifiedTradeSettlementHeaderMonetarySummation(data.specifiedTradeSettlementHeaderMonetarySummation)
          : <SpecifiedTradeSettlementHeaderMonetarySummation>this.specifiedTradeSettlementHeaderMonetarySummation;
    }
  }

  init(_data?: any) {
    if (_data) {
      for (var property in _data) {
        if (_data.hasOwnProperty(property)) this[property] = _data[property];
      }
      this.invoiceCurrencyCode = _data['invoiceCurrencyCode'];
      this.specifiedTradeSettlementHeaderMonetarySummation = _data['specifiedTradeSettlementHeaderMonetarySummation']
        ? SpecifiedTradeSettlementHeaderMonetarySummation.fromJS(_data['specifiedTradeSettlementHeaderMonetarySummation'])
        : <any>undefined;
    }
  }

  static fromJS(data: any): ApplicableHeaderTradeSettlement {
    data = typeof data === 'object' ? data : {};
    let result = new ApplicableHeaderTradeSettlement();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    for (var property in this) {
      if (this.hasOwnProperty(property)) data[property] = this[property];
    }
    data['invoiceCurrencyCode'] = this.invoiceCurrencyCode;
    data['specifiedTradeSettlementHeaderMonetarySummation'] = this.specifiedTradeSettlementHeaderMonetarySummation
      ? this.specifiedTradeSettlementHeaderMonetarySummation.toJSON()
      : <any>undefined;
    return data;
  }
}

export interface IApplicableHeaderTradeSettlement {
  invoiceCurrencyCode?: string | undefined;
  specifiedTradeSettlementHeaderMonetarySummation?: ISpecifiedTradeSettlementHeaderMonetarySummation | undefined;

  [key: string]: any;
}

export class BuildInformationDto implements IBuildInformationDto {
  version!: string;
  buildDate!: Date;

  [key: string]: any;

  constructor(data?: IBuildInformationDto) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property)) (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      for (var property in _data) {
        if (_data.hasOwnProperty(property)) this[property] = _data[property];
      }
      this.version = _data['version'];
      this.buildDate = _data['buildDate'] ? new Date(_data['buildDate'].toString()) : <any>undefined;
    }
  }

  static fromJS(data: any): BuildInformationDto {
    data = typeof data === 'object' ? data : {};
    let result = new BuildInformationDto();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    for (var property in this) {
      if (this.hasOwnProperty(property)) data[property] = this[property];
    }
    data['version'] = this.version;
    data['buildDate'] = this.buildDate ? this.buildDate.toISOString() : <any>undefined;
    return data;
  }
}

export interface IBuildInformationDto {
  version: string;
  buildDate: Date;

  [key: string]: any;
}

export class BuyerOrderReferencedDocument implements IBuyerOrderReferencedDocument {
  issuerAssignedId?: string | undefined;

  [key: string]: any;

  constructor(data?: IBuyerOrderReferencedDocument) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property)) (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      for (var property in _data) {
        if (_data.hasOwnProperty(property)) this[property] = _data[property];
      }
      this.issuerAssignedId = _data['issuerAssignedId'];
    }
  }

  static fromJS(data: any): BuyerOrderReferencedDocument {
    data = typeof data === 'object' ? data : {};
    let result = new BuyerOrderReferencedDocument();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    for (var property in this) {
      if (this.hasOwnProperty(property)) data[property] = this[property];
    }
    data['issuerAssignedId'] = this.issuerAssignedId;
    return data;
  }
}

export interface IBuyerOrderReferencedDocument {
  issuerAssignedId?: string | undefined;

  [key: string]: any;
}

export class BuyerTradeParty implements IBuyerTradeParty {
  name?: string | undefined;
  specifiedLegalOrganization?: BuyerTradePartySpecifiedLegalOrganization | undefined;

  [key: string]: any;

  constructor(data?: IBuyerTradeParty) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property)) (<any>this)[property] = (<any>data)[property];
      }
      this.specifiedLegalOrganization =
        data.specifiedLegalOrganization && !(<any>data.specifiedLegalOrganization).toJSON
          ? new BuyerTradePartySpecifiedLegalOrganization(data.specifiedLegalOrganization)
          : <BuyerTradePartySpecifiedLegalOrganization>this.specifiedLegalOrganization;
    }
  }

  init(_data?: any) {
    if (_data) {
      for (var property in _data) {
        if (_data.hasOwnProperty(property)) this[property] = _data[property];
      }
      this.name = _data['name'];
      this.specifiedLegalOrganization = _data['specifiedLegalOrganization']
        ? BuyerTradePartySpecifiedLegalOrganization.fromJS(_data['specifiedLegalOrganization'])
        : <any>undefined;
    }
  }

  static fromJS(data: any): BuyerTradeParty {
    data = typeof data === 'object' ? data : {};
    let result = new BuyerTradeParty();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    for (var property in this) {
      if (this.hasOwnProperty(property)) data[property] = this[property];
    }
    data['name'] = this.name;
    data['specifiedLegalOrganization'] = this.specifiedLegalOrganization ? this.specifiedLegalOrganization.toJSON() : <any>undefined;
    return data;
  }
}

export interface IBuyerTradeParty {
  name?: string | undefined;
  specifiedLegalOrganization?: IBuyerTradePartySpecifiedLegalOrganization | undefined;

  [key: string]: any;
}

export class BuyerTradePartySpecifiedLegalOrganization implements IBuyerTradePartySpecifiedLegalOrganization {
  id?: string | undefined;
  idSchemeId?: string | undefined;

  [key: string]: any;

  constructor(data?: IBuyerTradePartySpecifiedLegalOrganization) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property)) (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      for (var property in _data) {
        if (_data.hasOwnProperty(property)) this[property] = _data[property];
      }
      this.id = _data['id'];
      this.idSchemeId = _data['idSchemeId'];
    }
  }

  static fromJS(data: any): BuyerTradePartySpecifiedLegalOrganization {
    data = typeof data === 'object' ? data : {};
    let result = new BuyerTradePartySpecifiedLegalOrganization();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    for (var property in this) {
      if (this.hasOwnProperty(property)) data[property] = this[property];
    }
    data['id'] = this.id;
    data['idSchemeId'] = this.idSchemeId;
    return data;
  }
}

export interface IBuyerTradePartySpecifiedLegalOrganization {
  id?: string | undefined;
  idSchemeId?: string | undefined;

  [key: string]: any;
}

export class CrossIndustryInvoice implements ICrossIndustryInvoice {
  exchangedDocumentContext?: ExchangedDocumentContext | undefined;
  exchangedDocument?: ExchangedDocument | undefined;
  supplyChainTradeTransaction?: SupplyChainTradeTransaction | undefined;

  [key: string]: any;

  constructor(data?: ICrossIndustryInvoice) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property)) (<any>this)[property] = (<any>data)[property];
      }
      this.exchangedDocumentContext =
        data.exchangedDocumentContext && !(<any>data.exchangedDocumentContext).toJSON
          ? new ExchangedDocumentContext(data.exchangedDocumentContext)
          : <ExchangedDocumentContext>this.exchangedDocumentContext;
      this.exchangedDocument =
        data.exchangedDocument && !(<any>data.exchangedDocument).toJSON ? new ExchangedDocument(data.exchangedDocument) : <ExchangedDocument>this.exchangedDocument;
      this.supplyChainTradeTransaction =
        data.supplyChainTradeTransaction && !(<any>data.supplyChainTradeTransaction).toJSON
          ? new SupplyChainTradeTransaction(data.supplyChainTradeTransaction)
          : <SupplyChainTradeTransaction>this.supplyChainTradeTransaction;
    }
  }

  init(_data?: any) {
    if (_data) {
      for (var property in _data) {
        if (_data.hasOwnProperty(property)) this[property] = _data[property];
      }
      this.exchangedDocumentContext = _data['exchangedDocumentContext'] ? ExchangedDocumentContext.fromJS(_data['exchangedDocumentContext']) : <any>undefined;
      this.exchangedDocument = _data['exchangedDocument'] ? ExchangedDocument.fromJS(_data['exchangedDocument']) : <any>undefined;
      this.supplyChainTradeTransaction = _data['supplyChainTradeTransaction'] ? SupplyChainTradeTransaction.fromJS(_data['supplyChainTradeTransaction']) : <any>undefined;
    }
  }

  static fromJS(data: any): CrossIndustryInvoice {
    data = typeof data === 'object' ? data : {};
    let result = new CrossIndustryInvoice();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    for (var property in this) {
      if (this.hasOwnProperty(property)) data[property] = this[property];
    }
    data['exchangedDocumentContext'] = this.exchangedDocumentContext ? this.exchangedDocumentContext.toJSON() : <any>undefined;
    data['exchangedDocument'] = this.exchangedDocument ? this.exchangedDocument.toJSON() : <any>undefined;
    data['supplyChainTradeTransaction'] = this.supplyChainTradeTransaction ? this.supplyChainTradeTransaction.toJSON() : <any>undefined;
    return data;
  }
}

export interface ICrossIndustryInvoice {
  exchangedDocumentContext?: IExchangedDocumentContext | undefined;
  exchangedDocument?: IExchangedDocument | undefined;
  supplyChainTradeTransaction?: ISupplyChainTradeTransaction | undefined;

  [key: string]: any;
}

export class ExchangedDocument implements IExchangedDocument {
  id?: string | undefined;
  typeCode?: InvoiceTypeCode | undefined;
  issueDateTime?: Date | undefined;
  issueDateTimeFormat?: DateOnlyFormat | undefined;

  [key: string]: any;

  constructor(data?: IExchangedDocument) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property)) (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      for (var property in _data) {
        if (_data.hasOwnProperty(property)) this[property] = _data[property];
      }
      this.id = _data['id'];
      this.typeCode = _data['typeCode'];
      this.issueDateTime = _data['issueDateTime'] ? new Date(_data['issueDateTime'].toString()) : <any>undefined;
      this.issueDateTimeFormat = _data['issueDateTimeFormat'];
    }
  }

  static fromJS(data: any): ExchangedDocument {
    data = typeof data === 'object' ? data : {};
    let result = new ExchangedDocument();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    for (var property in this) {
      if (this.hasOwnProperty(property)) data[property] = this[property];
    }
    data['id'] = this.id;
    data['typeCode'] = this.typeCode;
    data['issueDateTime'] = this.issueDateTime ? formatDate(this.issueDateTime) : <any>undefined;
    data['issueDateTimeFormat'] = this.issueDateTimeFormat;
    return data;
  }
}

export interface IExchangedDocument {
  id?: string | undefined;
  typeCode?: InvoiceTypeCode | undefined;
  issueDateTime?: Date | undefined;
  issueDateTimeFormat?: DateOnlyFormat | undefined;

  [key: string]: any;
}

export class ExchangedDocumentContext implements IExchangedDocumentContext {
  businessProcessSpecifiedDocumentContextParameterId?: string | undefined;
  guidelineSpecifiedDocumentContextParameterId?: GuidelineSpecifiedDocumentContextParameterId | undefined;

  [key: string]: any;

  constructor(data?: IExchangedDocumentContext) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property)) (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      for (var property in _data) {
        if (_data.hasOwnProperty(property)) this[property] = _data[property];
      }
      this.businessProcessSpecifiedDocumentContextParameterId = _data['businessProcessSpecifiedDocumentContextParameterId'];
      this.guidelineSpecifiedDocumentContextParameterId = _data['guidelineSpecifiedDocumentContextParameterId'];
    }
  }

  static fromJS(data: any): ExchangedDocumentContext {
    data = typeof data === 'object' ? data : {};
    let result = new ExchangedDocumentContext();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    for (var property in this) {
      if (this.hasOwnProperty(property)) data[property] = this[property];
    }
    data['businessProcessSpecifiedDocumentContextParameterId'] = this.businessProcessSpecifiedDocumentContextParameterId;
    data['guidelineSpecifiedDocumentContextParameterId'] = this.guidelineSpecifiedDocumentContextParameterId;
    return data;
  }
}

export interface IExchangedDocumentContext {
  businessProcessSpecifiedDocumentContextParameterId?: string | undefined;
  guidelineSpecifiedDocumentContextParameterId?: GuidelineSpecifiedDocumentContextParameterId | undefined;

  [key: string]: any;
}

export type DateOnlyFormat = 'DateOnly';

export type GuidelineSpecifiedDocumentContextParameterId = 'Minimum' | 'BasicWl' | 'Basic' | 'En16931' | 'Extended';

export type InvoiceTypeCode =
  | 'RequestForPayment'
  | 'DebitNoteRelatedToGoodsOrServices'
  | 'CreditNoteRelatedToGoodsOrServices'
  | 'MeteredServicesInvoice'
  | 'CreditNoteRelatedToFinancialAdjustments'
  | 'DebitNoteRelatedToFinancialAdjustments'
  | 'TaxNotification'
  | 'InvoicingDataSheet'
  | 'DirectPaymentValuation'
  | 'ProvisionalPaymentValuation'
  | 'PaymentValuation'
  | 'InterimApplicationForPayment'
  | 'FinalPaymentRequestBasedOnCompletionOfWork'
  | 'PaymentRequestForCompletedUnits'
  | 'SelfBilledCreditNote'
  | 'ConsolidatedCreditNoteGoodsAndServices'
  | 'PriceVariationInvoice'
  | 'CreditNoteForPriceVariation'
  | 'DelcredereCreditNote'
  | 'ProformaInvoice'
  | 'PartialInvoice'
  | 'CommercialInvoiceWhichIncludesPackingList'
  | 'CommercialInvoice'
  | 'CreditNote'
  | 'CommissionNote'
  | 'DebitNote'
  | 'CorrectedInvoice'
  | 'ConsolidatedInvoice'
  | 'PrepaymentInvoice'
  | 'HireInvoice'
  | 'TaxInvoice'
  | 'SelfBilledInvoice'
  | 'DelcredereInvoice'
  | 'FactoredInvoice'
  | 'LeaseInvoice'
  | 'ConsignmentInvoice'
  | 'FactoredCreditNote'
  | 'OcrPaymentCreditNote'
  | 'DebitAdvice'
  | 'ReversalOfDebit'
  | 'ReversalOfCredit'
  | 'SelfBilledDebitNote'
  | 'ForwardersCreditNote'
  | 'ForwardersInvoiceDiscrepancyReport'
  | 'InsurersInvoice'
  | 'ForwardersInvoice'
  | 'PortChargesDocuments'
  | 'InvoiceInformationForAccountingPurposes'
  | 'FreightInvoice'
  | 'ClaimNotification'
  | 'ConsularInvoice'
  | 'PartialConstructionInvoice'
  | 'PartialFinalConstructionInvoice'
  | 'FinalConstructionInvoice'
  | 'CustomsInvoice';

export type VatOnlyTaxSchemeIdentifier = 'Vat';

export class PackageDto implements IPackageDto {
  name!: string;
  author!: string;
  version!: string;
  license!: string;
  link!: string;

  [key: string]: any;

  constructor(data?: IPackageDto) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property)) (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      for (var property in _data) {
        if (_data.hasOwnProperty(property)) this[property] = _data[property];
      }
      this.name = _data['name'];
      this.author = _data['author'];
      this.version = _data['version'];
      this.license = _data['license'];
      this.link = _data['link'];
    }
  }

  static fromJS(data: any): PackageDto {
    data = typeof data === 'object' ? data : {};
    let result = new PackageDto();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    for (var property in this) {
      if (this.hasOwnProperty(property)) data[property] = this[property];
    }
    data['name'] = this.name;
    data['author'] = this.author;
    data['version'] = this.version;
    data['license'] = this.license;
    data['link'] = this.link;
    return data;
  }
}

export interface IPackageDto {
  name: string;
  author: string;
  version: string;
  license: string;
  link: string;

  [key: string]: any;
}

export class SellerTradeParty implements ISellerTradeParty {
  name?: string | undefined;
  specifiedLegalOrganization?: SellerTradePartySpecifiedLegalOrganization | undefined;
  postalTradeAddress?: SellerTradePartyPostalTradeAddress | undefined;
  specifiedTaxRegistration?: SellerTradePartySpecifiedTaxRegistration | undefined;

  [key: string]: any;

  constructor(data?: ISellerTradeParty) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property)) (<any>this)[property] = (<any>data)[property];
      }
      this.specifiedLegalOrganization =
        data.specifiedLegalOrganization && !(<any>data.specifiedLegalOrganization).toJSON
          ? new SellerTradePartySpecifiedLegalOrganization(data.specifiedLegalOrganization)
          : <SellerTradePartySpecifiedLegalOrganization>this.specifiedLegalOrganization;
      this.postalTradeAddress =
        data.postalTradeAddress && !(<any>data.postalTradeAddress).toJSON
          ? new SellerTradePartyPostalTradeAddress(data.postalTradeAddress)
          : <SellerTradePartyPostalTradeAddress>this.postalTradeAddress;
      this.specifiedTaxRegistration =
        data.specifiedTaxRegistration && !(<any>data.specifiedTaxRegistration).toJSON
          ? new SellerTradePartySpecifiedTaxRegistration(data.specifiedTaxRegistration)
          : <SellerTradePartySpecifiedTaxRegistration>this.specifiedTaxRegistration;
    }
  }

  init(_data?: any) {
    if (_data) {
      for (var property in _data) {
        if (_data.hasOwnProperty(property)) this[property] = _data[property];
      }
      this.name = _data['name'];
      this.specifiedLegalOrganization = _data['specifiedLegalOrganization']
        ? SellerTradePartySpecifiedLegalOrganization.fromJS(_data['specifiedLegalOrganization'])
        : <any>undefined;
      this.postalTradeAddress = _data['postalTradeAddress'] ? SellerTradePartyPostalTradeAddress.fromJS(_data['postalTradeAddress']) : <any>undefined;
      this.specifiedTaxRegistration = _data['specifiedTaxRegistration'] ? SellerTradePartySpecifiedTaxRegistration.fromJS(_data['specifiedTaxRegistration']) : <any>undefined;
    }
  }

  static fromJS(data: any): SellerTradeParty {
    data = typeof data === 'object' ? data : {};
    let result = new SellerTradeParty();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    for (var property in this) {
      if (this.hasOwnProperty(property)) data[property] = this[property];
    }
    data['name'] = this.name;
    data['specifiedLegalOrganization'] = this.specifiedLegalOrganization ? this.specifiedLegalOrganization.toJSON() : <any>undefined;
    data['postalTradeAddress'] = this.postalTradeAddress ? this.postalTradeAddress.toJSON() : <any>undefined;
    data['specifiedTaxRegistration'] = this.specifiedTaxRegistration ? this.specifiedTaxRegistration.toJSON() : <any>undefined;
    return data;
  }
}

export interface ISellerTradeParty {
  name?: string | undefined;
  specifiedLegalOrganization?: ISellerTradePartySpecifiedLegalOrganization | undefined;
  postalTradeAddress?: ISellerTradePartyPostalTradeAddress | undefined;
  specifiedTaxRegistration?: ISellerTradePartySpecifiedTaxRegistration | undefined;

  [key: string]: any;
}

export class SellerTradePartyPostalTradeAddress implements ISellerTradePartyPostalTradeAddress {
  countryId?: string | undefined;

  [key: string]: any;

  constructor(data?: ISellerTradePartyPostalTradeAddress) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property)) (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      for (var property in _data) {
        if (_data.hasOwnProperty(property)) this[property] = _data[property];
      }
      this.countryId = _data['countryId'];
    }
  }

  static fromJS(data: any): SellerTradePartyPostalTradeAddress {
    data = typeof data === 'object' ? data : {};
    let result = new SellerTradePartyPostalTradeAddress();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    for (var property in this) {
      if (this.hasOwnProperty(property)) data[property] = this[property];
    }
    data['countryId'] = this.countryId;
    return data;
  }
}

export interface ISellerTradePartyPostalTradeAddress {
  countryId?: string | undefined;

  [key: string]: any;
}

export class SellerTradePartySpecifiedLegalOrganization implements ISellerTradePartySpecifiedLegalOrganization {
  id?: string | undefined;
  idSchemeId?: string | undefined;

  [key: string]: any;

  constructor(data?: ISellerTradePartySpecifiedLegalOrganization) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property)) (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      for (var property in _data) {
        if (_data.hasOwnProperty(property)) this[property] = _data[property];
      }
      this.id = _data['id'];
      this.idSchemeId = _data['idSchemeId'];
    }
  }

  static fromJS(data: any): SellerTradePartySpecifiedLegalOrganization {
    data = typeof data === 'object' ? data : {};
    let result = new SellerTradePartySpecifiedLegalOrganization();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    for (var property in this) {
      if (this.hasOwnProperty(property)) data[property] = this[property];
    }
    data['id'] = this.id;
    data['idSchemeId'] = this.idSchemeId;
    return data;
  }
}

export interface ISellerTradePartySpecifiedLegalOrganization {
  id?: string | undefined;
  idSchemeId?: string | undefined;

  [key: string]: any;
}

export class SellerTradePartySpecifiedTaxRegistration implements ISellerTradePartySpecifiedTaxRegistration {
  id?: string | undefined;
  idSchemeId?: VatOnlyTaxSchemeIdentifier | undefined;

  [key: string]: any;

  constructor(data?: ISellerTradePartySpecifiedTaxRegistration) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property)) (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      for (var property in _data) {
        if (_data.hasOwnProperty(property)) this[property] = _data[property];
      }
      this.id = _data['id'];
      this.idSchemeId = _data['idSchemeId'];
    }
  }

  static fromJS(data: any): SellerTradePartySpecifiedTaxRegistration {
    data = typeof data === 'object' ? data : {};
    let result = new SellerTradePartySpecifiedTaxRegistration();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    for (var property in this) {
      if (this.hasOwnProperty(property)) data[property] = this[property];
    }
    data['id'] = this.id;
    data['idSchemeId'] = this.idSchemeId;
    return data;
  }
}

export interface ISellerTradePartySpecifiedTaxRegistration {
  id?: string | undefined;
  idSchemeId?: VatOnlyTaxSchemeIdentifier | undefined;

  [key: string]: any;
}

export class SpecifiedTradeSettlementHeaderMonetarySummation implements ISpecifiedTradeSettlementHeaderMonetarySummation {
  taxBasisTotalAmount?: number | undefined;
  taxTotalAmount?: number | undefined;
  taxTotalAmountCurrencyId?: string | undefined;
  grandTotalAmount?: number | undefined;
  duePayableAmount?: number | undefined;

  [key: string]: any;

  constructor(data?: ISpecifiedTradeSettlementHeaderMonetarySummation) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property)) (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      for (var property in _data) {
        if (_data.hasOwnProperty(property)) this[property] = _data[property];
      }
      this.taxBasisTotalAmount = _data['taxBasisTotalAmount'];
      this.taxTotalAmount = _data['taxTotalAmount'];
      this.taxTotalAmountCurrencyId = _data['taxTotalAmountCurrencyId'];
      this.grandTotalAmount = _data['grandTotalAmount'];
      this.duePayableAmount = _data['duePayableAmount'];
    }
  }

  static fromJS(data: any): SpecifiedTradeSettlementHeaderMonetarySummation {
    data = typeof data === 'object' ? data : {};
    let result = new SpecifiedTradeSettlementHeaderMonetarySummation();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    for (var property in this) {
      if (this.hasOwnProperty(property)) data[property] = this[property];
    }
    data['taxBasisTotalAmount'] = this.taxBasisTotalAmount;
    data['taxTotalAmount'] = this.taxTotalAmount;
    data['taxTotalAmountCurrencyId'] = this.taxTotalAmountCurrencyId;
    data['grandTotalAmount'] = this.grandTotalAmount;
    data['duePayableAmount'] = this.duePayableAmount;
    return data;
  }
}

export interface ISpecifiedTradeSettlementHeaderMonetarySummation {
  taxBasisTotalAmount?: number | undefined;
  taxTotalAmount?: number | undefined;
  taxTotalAmountCurrencyId?: string | undefined;
  grandTotalAmount?: number | undefined;
  duePayableAmount?: number | undefined;

  [key: string]: any;
}

export class SupplyChainTradeTransaction implements ISupplyChainTradeTransaction {
  applicableHeaderTradeAgreement?: ApplicableHeaderTradeAgreement | undefined;
  applicableHeaderTradeDelivery?: ApplicableHeaderTradeDelivery | undefined;
  applicableHeaderTradeSettlement?: ApplicableHeaderTradeSettlement | undefined;

  [key: string]: any;

  constructor(data?: ISupplyChainTradeTransaction) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property)) (<any>this)[property] = (<any>data)[property];
      }
      this.applicableHeaderTradeAgreement =
        data.applicableHeaderTradeAgreement && !(<any>data.applicableHeaderTradeAgreement).toJSON
          ? new ApplicableHeaderTradeAgreement(data.applicableHeaderTradeAgreement)
          : <ApplicableHeaderTradeAgreement>this.applicableHeaderTradeAgreement;
      this.applicableHeaderTradeDelivery =
        data.applicableHeaderTradeDelivery && !(<any>data.applicableHeaderTradeDelivery).toJSON
          ? new ApplicableHeaderTradeDelivery(data.applicableHeaderTradeDelivery)
          : <ApplicableHeaderTradeDelivery>this.applicableHeaderTradeDelivery;
      this.applicableHeaderTradeSettlement =
        data.applicableHeaderTradeSettlement && !(<any>data.applicableHeaderTradeSettlement).toJSON
          ? new ApplicableHeaderTradeSettlement(data.applicableHeaderTradeSettlement)
          : <ApplicableHeaderTradeSettlement>this.applicableHeaderTradeSettlement;
    }
  }

  init(_data?: any) {
    if (_data) {
      for (var property in _data) {
        if (_data.hasOwnProperty(property)) this[property] = _data[property];
      }
      this.applicableHeaderTradeAgreement = _data['applicableHeaderTradeAgreement']
        ? ApplicableHeaderTradeAgreement.fromJS(_data['applicableHeaderTradeAgreement'])
        : <any>undefined;
      this.applicableHeaderTradeDelivery = _data['applicableHeaderTradeDelivery'] ? ApplicableHeaderTradeDelivery.fromJS(_data['applicableHeaderTradeDelivery']) : <any>undefined;
      this.applicableHeaderTradeSettlement = _data['applicableHeaderTradeSettlement']
        ? ApplicableHeaderTradeSettlement.fromJS(_data['applicableHeaderTradeSettlement'])
        : <any>undefined;
    }
  }

  static fromJS(data: any): SupplyChainTradeTransaction {
    data = typeof data === 'object' ? data : {};
    let result = new SupplyChainTradeTransaction();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    for (var property in this) {
      if (this.hasOwnProperty(property)) data[property] = this[property];
    }
    data['applicableHeaderTradeAgreement'] = this.applicableHeaderTradeAgreement ? this.applicableHeaderTradeAgreement.toJSON() : <any>undefined;
    data['applicableHeaderTradeDelivery'] = this.applicableHeaderTradeDelivery ? this.applicableHeaderTradeDelivery.toJSON() : <any>undefined;
    data['applicableHeaderTradeSettlement'] = this.applicableHeaderTradeSettlement ? this.applicableHeaderTradeSettlement.toJSON() : <any>undefined;
    return data;
  }
}

export interface ISupplyChainTradeTransaction {
  applicableHeaderTradeAgreement?: IApplicableHeaderTradeAgreement | undefined;
  applicableHeaderTradeDelivery?: IApplicableHeaderTradeDelivery | undefined;
  applicableHeaderTradeSettlement?: IApplicableHeaderTradeSettlement | undefined;

  [key: string]: any;
}

function formatDate(d: Date) {
  return d.getFullYear() + '-' + (d.getMonth() < 9 ? '0' + (d.getMonth() + 1) : d.getMonth() + 1) + '-' + (d.getDate() < 10 ? '0' + d.getDate() : d.getDate());
}

export interface FileResponse {
  data: Blob;
  status: number;
  fileName?: string;
  headers?: { [name: string]: any };
}
