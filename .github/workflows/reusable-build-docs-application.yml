name: Reusable - Build Docs Application

on:
  workflow_call:
    inputs:
      artifact-name:
        description: The name of the artifact that will contain the build result
        type: string
        required: true
      
      version:
        description: The version of the application
        type: string
        required: true

jobs:
  build-editor-application:
    name: Build Docs Application
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET 9 (for dotnet-releaser, lib, and apps)
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Add System.CommandLine daily builds nuget source
        run: dotnet nuget add source https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-libraries/nuget/v3/index.json --name "System.CommandLine - Daily Builds"

      - name: Restore dependencies
        run: cd src; dotnet restore

      - name: Build library
        env:
          MINVERVERSIONOVERRIDE: ${{ inputs.version }}
        run: cd src; dotnet build FacturXDotNet/FacturXDotNet.csproj --configuration Release --no-restore

      - name: Install docfx
        run: dotnet tool install -g docfx

      - name: Install dfmg
        run: dotnet tool install -g DocFxMarkdownGen

      - name: Generate .NET API reference
        run: |
          mkdir -p dist/api-reference
          cp docfx.json dist/api-reference/docfx.json
          
          cd dist/api-reference
          docfx docfx.json
          dfmg
          
          # add frontmatter attributes
          find . -type f -name "*.md" -exec sed -i 's/---\ntitle:/---\npageClass: pageClass: dotnet-api-reference-page\neditLink: false\ntitle:/g' {} \;
          
          rm -rf ../../docs/src/api-reference/*
          mv md/* ../../docs/src/api-reference/

      - name: Build API
        env:
          MINVERVERSIONOVERRIDE: ${{ inputs.version }}
        run: cd src; dotnet build FacturXDotNet.API/FacturXDotNet.API.csproj --configuration Release --no-restore

      - name: Copy OpenAPI specification
        run: cp src/FacturXDotNet.API/FacturXDotNet.API.json docs/src/assets/facturxdotnet.openapi.json

      - name: Use Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: npm
          cache-dependency-path: docs/package-lock.json

      - name: Install dependencies
        run: cd docs; npm ci

      - name: Set version number
        run: |
          sed -i -e 's/{VERSION}/${{ inputs.version }}/g' docs/.vitepress/config.mts
          sed -i -e 's/{VERSION}/${{ inputs.version }}/g' docs/src/index.md

      - name: Build
        run: cd docs; npm run build -- --base /docs/ --outDir dist/

      - name: Upload build result
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.artifact-name }}
          path: docs/dist/
          if-no-files-found: error