name: Continuous Deployment - Publish API

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
  workflow_dispatch:

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  MINVERBUILDMETADATA: build.${{ github.run_id }}.${{ github.run_attempt}}

jobs:

  compute-version:
    name: Compute Version
    uses: ./.github/workflows/reusable-compute-version.yml

  build-docker-image:
    uses: ./.github/workflows/reusable-build-publish-api-docker-image.yml
    with:
      tag: latest
      version: ${{ needs.compute-version.outputs.version }}
  
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build-docker-image
    
    steps:
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.PROD_SSH_KEY }}" > ~/.ssh/prod.key
          chmod 600 ~/.ssh/prod.key

          echo "Host prod"                               > ~/.ssh/config
          echo "  HostName ${{ secrets.PROD_SSH_HOST }}" >> ~/.ssh/config
          echo "  User ${{ secrets.PROD_SSH_USER }}"     >> ~/.ssh/config
          echo "  IdentityFile ~/.ssh/prod.key"          >> ~/.ssh/config
          echo "  StrictHostKeyChecking no"              >> ~/.ssh/config

      - name: Docker compose pull
        run: |
          ssh prod 'cd facturxdotnet/release; docker compose pull'

      - name: Docker compose up
        run: |
          ssh prod 'cd facturxdotnet/release; docker compose up -d'