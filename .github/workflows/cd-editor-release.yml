name: Continuous Deployment - Publish Editor

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  MINVERBUILDMETADATA: build.${{ github.run_id }}.${{ github.run_attempt}}

jobs:

  build-depluy-frontend:
    name: Build frontend and deploy
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET 8 (for minver-cli)
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Install MinVer
        run: dotnet tool install -g minver-cli

      - name: Compute version
        id: compute_version
        run: |
          VERSION=$(minver -t v -v d)
          echo "Version is $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Compute date
        id: compute_date
        run: |
          DATE=$(date +'%Y-%m-%d')
          echo "Date is $DATE"
          echo "date=$DATE" >> $GITHUB_OUTPUT

      - name: Use Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: 'npm'
          cache-dependency-path: 'src/FacturXDotNet.WebEditor/package-lock.json'

      - name: Install dependencies
        run: cd src/FacturXDotNet.WebEditor; npm ci

      - name: Dump licenses file
        run: cd src/FacturXDotNet.WebEditor; node scripts/dump-licenses.js

      - name: Setup environment
        run: |
          cd src/FacturXDotNet.WebEditor
          echo "import { Environment } from './environment.types';"                 > src/environments/environment.ts
          echo ""                                                                   >> src/environments/environment.ts
          echo "export const environment: Environment = {"                          >> src/environments/environment.ts
          echo "  version: '${{ steps.compute_version.outputs.version}}',"          >> src/environments/environment.ts
          echo "  buildDate: new Date('${{ steps.compute_date.outputs.date }}'),"   >> src/environments/environment.ts
          echo "  apiUrl: 'https://api.facturxdotnet.org',"                         >> src/environments/environment.ts
          echo "};"                                                                 >> src/environments/environment.ts
          echo "Environment is"
          cat src/environments/environment.ts

      - name: Build
        run: cd src/FacturXDotNet.WebEditor; npm run build --if-present

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.PROD_SSH_KEY }}" > ~/.ssh/prod.key
          chmod 600 ~/.ssh/prod.key

          echo "Host prod"                               > ~/.ssh/config
          echo "  HostName ${{ secrets.PROD_SSH_HOST }}" >> ~/.ssh/config
          echo "  User ${{ secrets.PROD_SSH_USER }}"     >> ~/.ssh/config
          echo "  IdentityFile ~/.ssh/prod.key"          >> ~/.ssh/config
          echo "  StrictHostKeyChecking no"              >> ~/.ssh/config

      - name: Copy frontend to prod
        run: |
          ssh prod 'rm -rf /var/www/editor.facturxdotnet.org/html'
          ssh prod 'mkdir -p /var/www/editor.facturxdotnet.org/html'
          scp -r src/FacturXDotNet.WebEditor/dist/facturxdotnet-webeditor/browser/* prod:/var/www/editor.facturxdotnet.org/html/